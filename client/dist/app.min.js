/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1)


/***/ },
/* 1 */
/***/ function(module, exports) {

	/** @jsx React.DOM */'use strict';
	
	// var LeaderBoardHeader = React.createClass({
	//     render: function () {
	//         return (
	//             <div className="LeaderBoardHeader">
	//                 <h3>{this.props.date.toTimeString()}</h3>
	//                 Place header elements &lt;HeaderElement&gt; here
	//             </div>
	//         )
	//     }
	// })
	
	// ReactDOM.render(
	//     <LeaderBoardHeader date={new Date()}/>,
	//     document.getElementById('leaderboard')
	// )
	
	var TimespanCategoryRow = React.createClass({displayName: "TimespanCategoryRow",
	  render: function() {
	    return (React.createElement("tr", null, React.createElement("th", {colSpan: "2"}, this.props.category)));
	  }
	});
	
	var SwimmerRow = React.createClass({displayName: "SwimmerRow",
	  render: function() {
	    var name = this.props.swimmer.finished ?
	      this.props.swimmer.name :
	      React.createElement("span", {style: {color: 'red'}}, 
	        this.props.swimmer.name
	      );
	    return (
	      React.createElement("tr", null, 
	        React.createElement("td", null, name), 
	        React.createElement("td", null, this.props.swimmer.time ? this.props.swimmer.time : 'dnf')
	      )
	    );
	  }
	});
	
	var SwimmerTable = React.createClass({displayName: "SwimmerTable",
	  render: function() {
	    var rows = [];
	    var lastCategory = null;
	    this.props.swimmers.forEach(function(swimmer) {
	      if (swimmer.category !== lastCategory) {
	        rows.push(React.createElement(TimespanCategoryRow, {category: swimmer.category, key: swimmer.category}));
	      }
	      rows.push(React.createElement(SwimmerRow, {swimmer: swimmer, key: swimmer.name}));
	      lastCategory = swimmer.category;
	    });
	    return (
	      React.createElement("table", null, 
	        React.createElement("thead", null, 
	          React.createElement("tr", null, 
	            React.createElement("th", null, "Name"), 
	            React.createElement("th", null, "Time")
	          )
	        ), 
	        React.createElement("tbody", null, rows)
	      )
	    );
	  }
	});
	
	
	var LeaderboardTable = React.createClass({displayName: "LeaderboardTable",
	  render: function() {
	    return (
	        React.createElement(SwimmerTable, {swimmers: this.props.swimmers})
	    );
	  }
	});
	
	
	var SWIMMERS = [
	  {category: 'Elite', name: 'Donald Duck', finished: true, time: '0:37:14'},
	  {category: 'Elite', name: 'Clark Kent', finished: true, time: '0:59:42'},
	  {category: 'Women', name: 'Joan Jett', finished: false},
	  {category: 'Women', name: 'Janet Jackson', finished: true, time: '0:45:13'},
	  {category: 'Amateur', name: 'Minnie Mouse', finished: false},
	  {category: 'Amateur', name: 'Luke Skywalker', finished: true, time: '1:15:03'}
	];
	
	ReactDOM.render(
	  React.createElement(LeaderboardTable, {swimmers: SWIMMERS}),
	  document.getElementById('leaderboard')
	);


/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;base64,